@mixin flexbox($dir: row, $jt: center, $al: center, $inline: none) {
  @if $inline==none {
    display: flex;
  } @else {
    display: inline-flex;
  }
  @if $dir != none {
    flex-direction: $dir;
  }
  @if $jt !=none {
    justify-content: $jt;
  }
  @if $al !=none {
    align-items: $al;
  }
}

$burger-primary-color: #001044;
@mixin use-TranslateY-rotate($sign: '') {
  $y: 0.1rem;
  $rotate: 495deg;
  transform: translateY(#{$sign}#{$y}) rotate(#{$sign}#{$rotate});
}

.burger_menu {
  @include flexbox(none, flex-start);
  transform: translateX(0);
  transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}

.burger_menu__label {
  position: relative;
  display: block;
  width: 3.5em;
  padding: 0.5rem 0.4rem;
  border-radius: 0.24rem;
  cursor: pointer;
  background-color: #bde8ee;

  &::before,
  &::after {
    display: block;
    height: 4px;
    background-color: $burger-primary-color;
    transition: transform 0.5s ease-in-out;
    content: '';
  }

  &::before {
    box-shadow: 0 10px 0 $burger-primary-color;
  }
}

@mixin position(
  $position: relative,
  $top: none,
  $left: none,
  $right: none,
  $bottom: none
) {
  position: $position;
  @if $top != none {
    top: $top;
  }
  @if $left != none {
    left: $left;
  }

  @if ($right != none) {
    right: $right;
  }

  @if ($bottom != none) {
    bottom: $bottom;
  }
}

.burger_menu__checkbox {
  @include position(absolute, 15%, 15%);
  z-index: -1;
  opacity: 0;

  &:not(:checked) + .burger_menu__label::before {
    margin-bottom: 1em;
  }

  &:checked {
    + .burger_menu__label {
      padding-block: 1rem;
    }

    + .burger_menu__label::before {
      box-shadow: none;
      @include use-TranslateY-rotate();
    }

    + .burger_menu__label::after {
      @include use-TranslateY-rotate($sign: '-');
    }
  }
}
